#| warning: false
#| message: false
#| code-line-numbers: "1|2"
library(tableone) # main package
dat = read.csv('J:\\开学备份2022.08.15\\meeting\\code\\table1/table1_data.csv')
getwd()
#| warning: false
#| message: false
#| code-line-numbers: "1|2"
library(tableone) # main package
dat = read.csv('slides/table1_data.csv')
#| warning: false
#| message: false
#| code-line-numbers: "1|2"
library(tableone) # main package
dat = read.csv('./slides/table1_data.csv')
#| warning: false
#| message: false
#| code-line-numbers: "1|2"
library(tableone) # main package
dat = read.csv('./slides/table1_data.csv')
#| warning: false
#| message: false
#| code-line-numbers: "1|2"
library(tableone) # main package
dat = read.csv('examples/data/table1_data.csv')
library(tableone) # main package
dat = read.csv('examples/data/table1_data.csv')
dat = read.csv('examples/data/table1_data.csv')
dat = read.csv('examples/data/table1_data.csv')
library(ggplot2)
dat1 = readRDS("examples/data/figure1_A.Rdata")
as.data.frame(dat1)
#| code-line-numbers: "|1|3"
library(forestplot) # main package
fp <- read.csv("examples/data/forestplot.csv",
header = F)
fp
library(tableone) # main package
dat = read.csv('examples/data/table1_data.csv')
listVars <- c("Age", "Gender", "Cholesterol", "SystolicBP",
"BMI", "Smoking", "Education")
catVars <- c("Smoking","Education")
table1 <- CreateTableOne(vars = listVars,
data = dat,
factorVars = catVars,
strata = c("Gender"))
a <- print(table1, quote = TRUE, noSpaces = TRUE)
a <- as.data.frame(a)
write.csv(a, 'result_tableone.csv')
write.csv(a, 'examples/result/result_tableone.csv')
library(arsenal)
dat = read.csv('examples/data/table1_data.csv')
tab1 <- tableby(Gender ~ Age + Cholesterol + SystolicBP +
BMI + Smoking+ Education, data = dat)
sum_tab1 <- summary(tab1, text=TRUE)
sum_tab1
# tableby() function
mycontrols  <- tableby.control(numeric.stats = c("meansd"))
tab1 <- tableby(Gender ~ Age + Cholesterol + SystolicBP +
BMI + Smoking+ Education, data = dat,
control = mycontrols)
sum_tab1 <- summary(tab1, text=TRUE)
sum_tab1
library(forestplot) # main package
fp <- read.csv("examples/data/forestplot.csv",
header = F)
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列
mean = fp$V3, #均值
lower = fp$V4,#95%下限
upper = fp$V5 #95%上限
)
fp <- read.csv("examples/data/forestplot.csv",
header = F)
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列
mean = fp$V3, #均值
lower = fp$V4,#95%下限
upper = fp$V5 #95%上限
)
View(fp)
View(fp)
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列
mean = fp$V3, #均值
lower = fp$V4,#95%下限
upper = fp$V5 #95%上限
)
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列
mean = fp$V3, #均值
lower = fp$V4,#95%下限
upper = fp$V5 #95%上限
)
forestplot
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列
mean = fp$V3, #均值
lower = fp$V4,#95%下限
upper = fp$V5 #95%上限
)
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列
mean = fp$V3, #均值
lower = fp$V4,#95%下限
upper = fp$V5 #95%上限
)
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列#
mean = fp$V3, #绘图用的均值#
lower = fp$V4,
upper = fp$V5,
is.summary = c(T,rep(c(T,F,F,F,F,F,F,F),3),T,F,F,F,F,F,F), #某行是否加粗显示#
zero = 0,
col = fpColors(box='blue', #均值点的颜色#
summary='#8B008B', #加粗行的颜色#
lines = 'black', #95%CI线的颜色#
zero = 'skyblue'), #无效线的颜色#
boxsize = 0.5,  #均值点图形的大小#
lineheight = unit(8,'mm'), #行距#
colgap = unit(2,'mm'), #列宽#
lwd.zero = 1,# 无效线宽度
lwd.ci = 1, # 95%CI线宽度
xlab = 'The estimate', #x轴的标题#
lwd.xaxis = 1, #x 轴的刻度#
lty.ci = 1,# 95%CI线类型
ci.vertices = T, #是否在95%CI两头添加箭头#
ci.vertices.height = 0.15, #箭头的长短#
graph.pos = 2, #森林图画在第几列#
fn.ci_norm = fpDrawNormalCI, #均值点的形状，Normal是方形，Circel是圆形，Diamod是菱形，Ponit是点#
txt_gp = fpTxtGp(
ticks = gpar(cex = 1), #坐标轴上刻度的大小#
xlab = gpar(cex = 1),  #x轴名称的大小#
label = gpar(cex = 1)),  #开始用labeltext（）函数设置的文本字体的大小#
hrzl_lines=list(  "1"  = gpar(lty=1,lwd=1, col="black",fill="black"), #在表的第1行上边加一条黑线#
"2"  = gpar(lty=1,lwd=1, col="black",fill="black"),#在表的第2行上边加一条黑线#
"33" = gpar(lty=1,lwd=1, col="black",fill="black"),#在表的第33行上边加一条黑线
#在表的第5行上边加一条宽度为60，线型两端为butt，颜色为#898988，透明度为55的线段，线段分布在表格的2-3列
"5"  = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"8"  = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"13" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"16" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"21" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"24" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"29" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"32" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855")
)
)
fn <- local({
i = 0
no_lines <- sum(!is.na(fp$V3))
b_clrs = colorRampPalette(colors=c(rep('blue', 8), rep('red', 4), rep('blue', 4)))(no_lines)
l_clrs = colorRampPalette(colors=c(rep('blue', 8), rep('red', 4), rep('blue', 4)))(no_lines)
function(..., clr.line, clr.marker){
i <<- i + 1
fpDrawNormalCI(..., clr.line = l_clrs[i], clr.marker = b_clrs[i])
}
})
forestplot(
labeltext = as.matrix(fp[,1:2]),#设置文本列#
mean = fp$V3, #绘图用的均值#
lower = fp$V4,
upper = fp$V5,
is.summary = c(T,rep(c(T,F,F,F,F,F,F,F),3),T,F,F,F,F,F,F), #某行是否加粗显示#
zero = 0,
col = fpColors(box='blue', #均值点的颜色#
summary='#8B008B', #加粗行的颜色#
lines = 'black', #95%CI线的颜色#
zero = 'skyblue'), #无效线的颜色#
boxsize = 0.5,  #均值点图形的大小#
lineheight = unit(8,'mm'), #行距#
colgap = unit(2,'mm'), #列宽#
lwd.zero = 1,# 无效线宽度
lwd.ci = 1, # 95%CI线宽度
xlab = 'The estimate', #x轴的标题#
lwd.xaxis = 1, #x 轴的刻度#
lty.ci = 1,# 95%CI线类型
ci.vertices = T, #是否在95%CI两头添加箭头#
ci.vertices.height = 0.15, #箭头的长短#
graph.pos = 2, #森林图画在第几列#
fn.ci_norm = fn, #均值点的形状，Normal是方形，Circel是圆形，Diamod是菱形，Ponit是点#
txt_gp = fpTxtGp(
ticks = gpar(cex = 1), #坐标轴上刻度的大小#
xlab = gpar(cex = 1),  #x轴名称的大小#
label = gpar(cex = 1)),  #开始用labeltext（）函数设置的文本字体的大小#
hrzl_lines=list(  "1"  = gpar(lty=1,lwd=1, col="black",fill="black"), #在表的第1行上边加一条黑线#
"2"  = gpar(lty=1,lwd=1, col="black",fill="black"),#在表的第2行上边加一条黑线#
"33" = gpar(lty=1,lwd=1, col="black",fill="black"),#在表的第33行上边加一条黑线
#在表的第5行上边加一条宽度为60，线型两端为butt，颜色为#898988，透明度为55的线段，线段分布在表格的2-3列
"5"  = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"8"  = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"13" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"16" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"21" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"24" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"29" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855"),
"32" = gpar(lty=1,lwd=60,lineend="butt",columns=c(2:3),col="#89898855")
)
)
library(ggplot2)
dat = read.csv("examples/data/forestplot_ggplot.csv")
ggplot(dat, aes(x = Disease, y = PC, shape = group, fill = group, colour = group, group = group)) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "black", size = 0.5) +
geom_point(position = position_dodge(.7), size = 2) +
geom_errorbar(aes(ymin = PC_95_LOW, ymax = PC_95_UP), position = position_dodge(.7), width = 0.3, size = 0.6) +
xlab("")+
scale_y_continuous("Percentage Change (%) and 95% CI", labels = scales::number_format(accuracy = 0.01))+
scale_shape_manual(values = c(16, 23, 24, 15), guide = guide_legend(title = NULL)) +
scale_fill_manual(values = c("#ea4a50", "#325788", "dodgerblue", "coral1"), guide = guide_legend(title = NULL)) +
scale_colour_manual(values = c("#ea4a50", "#325788", "dodgerblue", "coral1"), guide = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = "top") + # top
theme(legend.key = element_blank()) +
theme(legend.background = element_rect(fill = "white", colour = "black")) +
theme(legend.text = element_text(size = 10, color = "black")) +
theme(legend.key.height = unit(0.3, "cm")) +
theme(axis.text.y = element_text(size = 12, angle = 0, color = "black")) +
theme(axis.text.x = element_text(size = 12, color = "black"))
library(tidyverse)
dat1.1 = dat %>% mutate(country = 'China')
dat1.2 = dat %>% mutate(country = 'USA')
dat2 = bind_rows(dat1.1, dat1.2)
ggplot(dat2, aes(x = Disease, y = PC, shape = group, fill = group, colour = group, group = group)) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "black", size = 0.5) +
geom_point(position = position_dodge(.7), size = 2) +
geom_errorbar(aes(ymin = PC_95_LOW, ymax = PC_95_UP), position = position_dodge(.7), width = 0.3, size = 0.6) +
scale_y_continuous("Percentage Change (%) and 95% CI", labels = scales::number_format(accuracy = 0.01))+
scale_shape_manual(values = c(16, 23, 24, 15), guide = guide_legend(title = NULL)) +
scale_fill_manual(values = c("#ea4a50", "#325788", "dodgerblue", "coral1"), guide = guide_legend(title = NULL)) +
scale_colour_manual(values = c("#ea4a50", "#325788", "dodgerblue", "coral1"), guide = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = "top") +
theme(legend.key = element_blank()) +
theme(legend.background = element_rect(fill = "white", colour = "black")) +
theme(legend.text = element_text(size = 10, color = "black")) +
theme(legend.key.height = unit(0.3, "cm")) +
theme(axis.text.y = element_text(size = 12, angle = 0, color = "black")) +
theme(axis.text.x = element_text(size = 12, color = "black")) +
xlab("") +
facet_wrap(vars(country))
library(ggfp)
gg_fp(
data=dat2, x_axis=Disease, point=PC, low=PC_95_LOW, up=PC_95_UP, group_var=group,
facet_var=country, point_shape=c(16, 16, 16, 16),
facet_color = c('#d9d9d9', '#d9d9d9'), group_color = c("#ea4a50", "#325788", "dodgerblue", "coral1"))
library(ggplot2)
dat1 = readRDS("examples/data/figure1_A.Rdata")
(p_A = ggplot(dat1, aes(x = defi_year, y = Incidence, fill = disease_type_en)) +
geom_area() +
scale_fill_manual(values =c('#D30f8C', '#6B58A6','#FCAF17',  '#0871B9', '#00B3B1'))  +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
labs(x = 'Year', fill = 'Disease Type', tag = '(A)')+
theme_classic() +
theme(legend.position = 'top')+
guides(fill=guide_legend(ncol=3))+
theme(axis.text.x = element_text(size = 12, hjust = 0.7),axis.text.y = element_text(size = 12)))
dat2 = readRDS("examples/data/figure1_B.Rdata")
dis_color = c("#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C",
"#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C",
"#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C", "#D30f8C",
"#D30f8C", "#D30f8C", "#D30f8C", "#6B58A6", "#6B58A6", "#6B58A6",
"#6B58A6", "#6B58A6", "#6B58A6", "#6B58A6", "#6B58A6", "#6B58A6",
"#6B58A6", "#6B58A6", "#6B58A6", "#FCAF17", "#FCAF17", "#FCAF17",
"#FCAF17", "#FCAF17", "#FCAF17", "#FCAF17", "#FCAF17", "#FCAF17",
"#FCAF17", "#FCAF17", "#0871B9", "#0871B9", "#0871B9", "#0871B9",
"#0871B9", "#0871B9", "#0871B9", "#00B3B1", "#00B3B1", "#00B3B1",
"#00B3B1", "#00B3B1", "#00B3B1", "#00B3B1")
(p_B = ggplot(dat2,aes(y = label, x = year_month, fill = Incidence2)) +
geom_tile() +
scale_fill_gradient(high = '#FF0000', low = 'white', limits = c(0, 1))+
labs(fill = 'Standarded Incidence', y = 'Disease name', x = 'Year', tag = "(B)") +
theme(axis.text.x = element_text(angle = 0, vjust = 0.3, hjust = 0.1),axis.text.y = element_text(color = rev(dis_color), size = 12-4)) +
geom_vline(xintercept = seq(from = 12.5, length.out = 4, by = 12), linetype = 'dashed') +
theme(axis.line = element_line(linetype = 'solid'),panel.border = element_rect(color = 'grey', fill = NA), axis.ticks.x = element_blank(),axis.text.x = element_text(color = 'black'))+
scale_x_discrete(labels =c(rep('',5),  2014,rep('',11), 2015, rep('',11), 2016, rep('',11), 2017, rep('',11), 2018, rep('',6))) +
theme(legend.position = 'top') +
theme(axis.title = element_text(size = 12),axis.text.x = element_text(size = 12)))
dat3 = readRDS("examples/data/figure1_C.Rdata")
colormap=c("#FFFFD9", "#EFF8B5", "#CFECB3", "#97D6B8", "#5CC0C0", "#30A5C2",
"#1E80B8", "#2254A3", "#21318D", "#081D58")
(p_C = ggplot(dat3,aes(x = defi_month, y = defi_year, fill = Incidence2)) +
geom_tile(color = 'black') +
facet_wrap(vars(disease_type_en), nrow = 1, ncol = 5)+
coord_polar()+
scale_fill_gradientn(colours=colormap) +
labs(tag = '(C)', fill = 'Standarded Incidence', x = 'Month', y = "Year") +
scale_x_continuous( breaks=seq(from = 1, to = 12, length.out = 12)) +
theme_classic()+
theme(plot.margin=unit(c(-4,0.5,-4,-0), "cm")) +
theme(legend.position = 'bottom') +
theme(axis.text = element_text(size = 12),axis.title = element_text(size = 12),strip.text = element_text(size = 12)))
library(patchwork)
(combined_plot = (p_A+p_B)/p_C)
